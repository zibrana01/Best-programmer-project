"""
Django settings for projetMairie project.

Generated by 'django-admin startproject' using Django 4.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure--01ieg%)^3mv!#ga5pj7$8m^(=p0i$der!9)80oy%!lv%wxi1z'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

JAZZMIN_UI_TWEAKS = {
    "theme": "darkly",
}

# Application definition

INSTALLED_APPS = [
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'gestion_ville',
    'gestion_ville.templatetags',
    'django.contrib.gis',
    'leaflet',
    'shapely',
    'django_google_maps',
    'mapwidget',
    #'crispy_forms'
    

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'projetMairie.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
            #'libraries': {
           #     'crispy_forms_tags': 'crispy_forms.templatetags.crispy_forms_tags',
           # },
        },
    },
]

WSGI_APPLICATION = 'projetMairie.wsgi.application'
#CRISPY_TEMPLATE_PACK = 'bootstrap4'

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        #'ENGINE': 'django.contrib.gis.db.backends.postgis',
        'NAME': 'concours',
        'USER': 'ibrahim',
        'PASSWORD': 'zibrana',
        'HOST': '127.0.0.1',
        'PORT': '5432',
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/'


STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

STATICFILES_DIRS = (
    #os.path.join(BASE_DIR, "static"),
    os.path.join(BASE_DIR, 'gestion_ville', 'static'),
)

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'


# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'



# Ajoutez ces lignes en haut du fichier pour importer les bibliothèques nécessaires
from ctypes.util import find_library

import os
from django.contrib.gis import gdal

# Configuration de GDAL_LIBRARY_PATH
# Set GDAL_LIBRARY_PATH if GDAL is installed
if find_library('gdal'):
    GDAL_LIBRARY_PATH = os.environ.get('GDAL_LIBRARY_PATH', '')

# Configuration de GEOS_LIBRARY_PATH
GEOS_LIBRARY_PATH = os.getenv('GEOS_LIBRARY_PATH', '')

# Configuration de GDAL_DATA
GDAL_DATA = os.getenv('GDAL_DATA', '')



#GOOGLE_MAPS_API_KEY = 'AIzaSyBPB1D4ZyYB0zOIv9O3CNJyitnQSiGnpYc'
GOOGLE_MAPS_JS_API_KEY = 'AIzaSyBPB1D4ZyYB0zOIv9O3CNJyitnQSiGnpYc'

GOOGLE_MAPS = {
    'api_key': GOOGLE_MAPS_JS_API_KEY,
    'language': 'fr-FR',
    'region': 'tg',
    'center': {
        'lat': 8.9833,
        'lng': 1.1333,
    },
}

